# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "usbhid" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = ["amdgpu""asus-wmi""asus-nb-wmi" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.blacklistedKernelModules = ["ucsi_acpi"];
  boot.extraModulePackages = [ ];
  boot.kernelPackages = pkgs.linuxPackages_xanmod;
  boot.zfs.devNodes = "/dev/disk/by-partuuid";

  fileSystems."/" =
    { device = "zroot/root";
      fsType = "zfs";
      neededForBoot = true;
    };

  fileSystems."/boot" =
    {  device = "/dev/disk/by-label/NIXBOOT";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/nix" =
    { device = "zroot/nix";
      fsType = "zfs";
    };

  fileSystems."/tmp" =
    { device = "zroot/tmp";
      fsType = "zfs";
    };

  fileSystems."/cache" =
    { device = "zroot/cache";
      fsType = "zfs";
    };

  fileSystems."/persist" =
    { device = "zroot/persist";
      fsType = "zfs";
      neededForBoot = true;
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/f29aebed-908f-46c0-969a-d0c203d0950b"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp103s0f3u1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
